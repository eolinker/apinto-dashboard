// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.22.3
// source: infos.proto

package grpc_service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EmptyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EmptyRequest) Reset() {
	*x = EmptyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infos_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmptyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyRequest) ProtoMessage() {}

func (x *EmptyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_infos_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyRequest.ProtoReflect.Descriptor instead.
func (*EmptyRequest) Descriptor() ([]byte, []int) {
	return file_infos_proto_rawDescGZIP(), []int{0}
}

type GetApisReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespaceId int32  `protobuf:"varint,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Path        string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *GetApisReq) Reset() {
	*x = GetApisReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infos_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApisReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApisReq) ProtoMessage() {}

func (x *GetApisReq) ProtoReflect() protoreflect.Message {
	mi := &file_infos_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApisReq.ProtoReflect.Descriptor instead.
func (*GetApisReq) Descriptor() ([]byte, []int) {
	return file_infos_proto_rawDescGZIP(), []int{1}
}

func (x *GetApisReq) GetNamespaceId() int32 {
	if x != nil {
		return x.NamespaceId
	}
	return 0
}

func (x *GetApisReq) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type GetApisByUUIDsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespaceId int32    `protobuf:"varint,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Uuids       []string `protobuf:"bytes,2,rep,name=uuids,proto3" json:"uuids,omitempty"`
}

func (x *GetApisByUUIDsReq) Reset() {
	*x = GetApisByUUIDsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infos_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetApisByUUIDsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApisByUUIDsReq) ProtoMessage() {}

func (x *GetApisByUUIDsReq) ProtoReflect() protoreflect.Message {
	mi := &file_infos_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApisByUUIDsReq.ProtoReflect.Descriptor instead.
func (*GetApisByUUIDsReq) Descriptor() ([]byte, []int) {
	return file_infos_proto_rawDescGZIP(), []int{2}
}

func (x *GetApisByUUIDsReq) GetNamespaceId() int32 {
	if x != nil {
		return x.NamespaceId
	}
	return 0
}

func (x *GetApisByUUIDsReq) GetUuids() []string {
	if x != nil {
		return x.Uuids
	}
	return nil
}

type GetServicesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespaceId int32  `protobuf:"varint,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetServicesReq) Reset() {
	*x = GetServicesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infos_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServicesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServicesReq) ProtoMessage() {}

func (x *GetServicesReq) ProtoReflect() protoreflect.Message {
	mi := &file_infos_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServicesReq.ProtoReflect.Descriptor instead.
func (*GetServicesReq) Descriptor() ([]byte, []int) {
	return file_infos_proto_rawDescGZIP(), []int{3}
}

func (x *GetServicesReq) GetNamespaceId() int32 {
	if x != nil {
		return x.NamespaceId
	}
	return 0
}

func (x *GetServicesReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GetServicesByNamesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespaceId int32    `protobuf:"varint,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Names       []string `protobuf:"bytes,2,rep,name=names,proto3" json:"names,omitempty"`
}

func (x *GetServicesByNamesReq) Reset() {
	*x = GetServicesByNamesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infos_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetServicesByNamesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetServicesByNamesReq) ProtoMessage() {}

func (x *GetServicesByNamesReq) ProtoReflect() protoreflect.Message {
	mi := &file_infos_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetServicesByNamesReq.ProtoReflect.Descriptor instead.
func (*GetServicesByNamesReq) Descriptor() ([]byte, []int) {
	return file_infos_proto_rawDescGZIP(), []int{4}
}

func (x *GetServicesByNamesReq) GetNamespaceId() int32 {
	if x != nil {
		return x.NamespaceId
	}
	return 0
}

func (x *GetServicesByNamesReq) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type GetAppsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespaceId int32 `protobuf:"varint,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
}

func (x *GetAppsReq) Reset() {
	*x = GetAppsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infos_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppsReq) ProtoMessage() {}

func (x *GetAppsReq) ProtoReflect() protoreflect.Message {
	mi := &file_infos_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppsReq.ProtoReflect.Descriptor instead.
func (*GetAppsReq) Descriptor() ([]byte, []int) {
	return file_infos_proto_rawDescGZIP(), []int{5}
}

func (x *GetAppsReq) GetNamespaceId() int32 {
	if x != nil {
		return x.NamespaceId
	}
	return 0
}

type GetAppsByUuidsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespaceId int32    `protobuf:"varint,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Uuids       []string `protobuf:"bytes,2,rep,name=uuids,proto3" json:"uuids,omitempty"`
}

func (x *GetAppsByUuidsReq) Reset() {
	*x = GetAppsByUuidsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infos_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAppsByUuidsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAppsByUuidsReq) ProtoMessage() {}

func (x *GetAppsByUuidsReq) ProtoReflect() protoreflect.Message {
	mi := &file_infos_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAppsByUuidsReq.ProtoReflect.Descriptor instead.
func (*GetAppsByUuidsReq) Descriptor() ([]byte, []int) {
	return file_infos_proto_rawDescGZIP(), []int{6}
}

func (x *GetAppsByUuidsReq) GetNamespaceId() int32 {
	if x != nil {
		return x.NamespaceId
	}
	return 0
}

func (x *GetAppsByUuidsReq) GetUuids() []string {
	if x != nil {
		return x.Uuids
	}
	return nil
}

type NamespacesListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*NamespaceItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *NamespacesListResp) Reset() {
	*x = NamespacesListResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infos_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamespacesListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespacesListResp) ProtoMessage() {}

func (x *NamespacesListResp) ProtoReflect() protoreflect.Message {
	mi := &file_infos_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespacesListResp.ProtoReflect.Descriptor instead.
func (*NamespacesListResp) Descriptor() ([]byte, []int) {
	return file_infos_proto_rawDescGZIP(), []int{7}
}

func (x *NamespacesListResp) GetItems() []*NamespaceItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type NamespaceItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NamespaceId   int32  `protobuf:"varint,1,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	NamespaceName string `protobuf:"bytes,2,opt,name=namespace_name,json=namespaceName,proto3" json:"namespace_name,omitempty"`
}

func (x *NamespaceItem) Reset() {
	*x = NamespaceItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infos_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamespaceItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceItem) ProtoMessage() {}

func (x *NamespaceItem) ProtoReflect() protoreflect.Message {
	mi := &file_infos_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceItem.ProtoReflect.Descriptor instead.
func (*NamespaceItem) Descriptor() ([]byte, []int) {
	return file_infos_proto_rawDescGZIP(), []int{8}
}

func (x *NamespaceItem) GetNamespaceId() int32 {
	if x != nil {
		return x.NamespaceId
	}
	return 0
}

func (x *NamespaceItem) GetNamespaceName() string {
	if x != nil {
		return x.NamespaceName
	}
	return ""
}

type ApisResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ApisItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ApisResp) Reset() {
	*x = ApisResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infos_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApisResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApisResp) ProtoMessage() {}

func (x *ApisResp) ProtoReflect() protoreflect.Message {
	mi := &file_infos_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApisResp.ProtoReflect.Descriptor instead.
func (*ApisResp) Descriptor() ([]byte, []int) {
	return file_infos_proto_rawDescGZIP(), []int{9}
}

func (x *ApisResp) GetItems() []*ApisItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type ApisItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid      string   `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name      string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	GroupUuid string   `protobuf:"bytes,3,opt,name=group_uuid,json=groupUuid,proto3" json:"group_uuid,omitempty"`
	Path      string   `protobuf:"bytes,4,opt,name=path,proto3" json:"path,omitempty"`
	Desc      string   `protobuf:"bytes,5,opt,name=desc,proto3" json:"desc,omitempty"`
	Methods   []string `protobuf:"bytes,6,rep,name=methods,proto3" json:"methods,omitempty"`
}

func (x *ApisItem) Reset() {
	*x = ApisItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infos_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApisItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApisItem) ProtoMessage() {}

func (x *ApisItem) ProtoReflect() protoreflect.Message {
	mi := &file_infos_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApisItem.ProtoReflect.Descriptor instead.
func (*ApisItem) Descriptor() ([]byte, []int) {
	return file_infos_proto_rawDescGZIP(), []int{10}
}

func (x *ApisItem) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *ApisItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApisItem) GetGroupUuid() string {
	if x != nil {
		return x.GroupUuid
	}
	return ""
}

func (x *ApisItem) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ApisItem) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ApisItem) GetMethods() []string {
	if x != nil {
		return x.Methods
	}
	return nil
}

type ServicesResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ServicesItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *ServicesResp) Reset() {
	*x = ServicesResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infos_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServicesResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServicesResp) ProtoMessage() {}

func (x *ServicesResp) ProtoReflect() protoreflect.Message {
	mi := &file_infos_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServicesResp.ProtoReflect.Descriptor instead.
func (*ServicesResp) Descriptor() ([]byte, []int) {
	return file_infos_proto_rawDescGZIP(), []int{11}
}

func (x *ServicesResp) GetItems() []*ServicesItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type ServicesItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Desc string `protobuf:"bytes,2,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *ServicesItem) Reset() {
	*x = ServicesItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infos_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServicesItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServicesItem) ProtoMessage() {}

func (x *ServicesItem) ProtoReflect() protoreflect.Message {
	mi := &file_infos_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServicesItem.ProtoReflect.Descriptor instead.
func (*ServicesItem) Descriptor() ([]byte, []int) {
	return file_infos_proto_rawDescGZIP(), []int{12}
}

func (x *ServicesItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServicesItem) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

type AppsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*AppsItem `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *AppsResp) Reset() {
	*x = AppsResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infos_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppsResp) ProtoMessage() {}

func (x *AppsResp) ProtoReflect() protoreflect.Message {
	mi := &file_infos_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppsResp.ProtoReflect.Descriptor instead.
func (*AppsResp) Descriptor() ([]byte, []int) {
	return file_infos_proto_rawDescGZIP(), []int{13}
}

func (x *AppsResp) GetItems() []*AppsItem {
	if x != nil {
		return x.Items
	}
	return nil
}

type AppsItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid string `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Desc string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc,omitempty"`
}

func (x *AppsItem) Reset() {
	*x = AppsItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_infos_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppsItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppsItem) ProtoMessage() {}

func (x *AppsItem) ProtoReflect() protoreflect.Message {
	mi := &file_infos_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppsItem.ProtoReflect.Descriptor instead.
func (*AppsItem) Descriptor() ([]byte, []int) {
	return file_infos_proto_rawDescGZIP(), []int{14}
}

func (x *AppsItem) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *AppsItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AppsItem) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

var File_infos_proto protoreflect.FileDescriptor

var file_infos_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x0e, 0x0a,
	0x0c, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x43, 0x0a,
	0x0a, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x22, 0x4c, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x73, 0x42, 0x79, 0x55,
	0x55, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x75,
	0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x75, 0x75, 0x69, 0x64, 0x73,
	0x22, 0x47, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x50, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52,
	0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x2f, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x73, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x73, 0x52, 0x65,
	0x71, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x75, 0x75, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x75, 0x75, 0x69, 0x64, 0x73, 0x22, 0x3a, 0x0a, 0x12, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x24, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x59, 0x0a, 0x0d, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0x2b, 0x0a, 0x08, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x41,
	0x70, 0x69, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x93,
	0x01, 0x0a, 0x08, 0x41, 0x70, 0x69, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x75, 0x75, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x75,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x73, 0x22, 0x33, 0x0a, 0x0c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x23, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x36, 0x0a, 0x0c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x22, 0x2b, 0x0a, 0x08, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x41,
	0x70, 0x70, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x46,
	0x0a, 0x08, 0x41, 0x70, 0x70, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x32, 0xf3, 0x02, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x73, 0x6f, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x38, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x41, 0x6c, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x12, 0x0d, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x4e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x22, 0x00, 0x12, 0x23, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x73, 0x12, 0x0b,
	0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x09, 0x2e, 0x41, 0x70,
	0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41,
	0x70, 0x69, 0x73, 0x42, 0x79, 0x55, 0x55, 0x49, 0x44, 0x73, 0x12, 0x12, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x69, 0x73, 0x42, 0x79, 0x55, 0x55, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x09,
	0x2e, 0x41, 0x70, 0x69, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x0f, 0x2e,
	0x47, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x0d,
	0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12,
	0x40, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x1a, 0x0d, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22,
	0x00, 0x12, 0x26, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x41, 0x6c, 0x6c, 0x41, 0x70, 0x70, 0x73, 0x12,
	0x0b, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x09, 0x2e, 0x41,
	0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x41, 0x70, 0x70, 0x73, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x73, 0x12, 0x12, 0x2e, 0x47, 0x65,
	0x74, 0x41, 0x70, 0x70, 0x73, 0x42, 0x79, 0x55, 0x75, 0x69, 0x64, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x09, 0x2e, 0x41, 0x70, 0x70, 0x73, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00, 0x42, 0x31, 0x5a, 0x2f,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x6f, 0x6c, 0x69, 0x6e,
	0x6b, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x6e, 0x74, 0x6f, 0x2d, 0x6d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_infos_proto_rawDescOnce sync.Once
	file_infos_proto_rawDescData = file_infos_proto_rawDesc
)

func file_infos_proto_rawDescGZIP() []byte {
	file_infos_proto_rawDescOnce.Do(func() {
		file_infos_proto_rawDescData = protoimpl.X.CompressGZIP(file_infos_proto_rawDescData)
	})
	return file_infos_proto_rawDescData
}

var file_infos_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_infos_proto_goTypes = []interface{}{
	(*EmptyRequest)(nil),          // 0: EmptyRequest
	(*GetApisReq)(nil),            // 1: GetApisReq
	(*GetApisByUUIDsReq)(nil),     // 2: GetApisByUUIDsReq
	(*GetServicesReq)(nil),        // 3: GetServicesReq
	(*GetServicesByNamesReq)(nil), // 4: GetServicesByNamesReq
	(*GetAppsReq)(nil),            // 5: GetAppsReq
	(*GetAppsByUuidsReq)(nil),     // 6: GetAppsByUuidsReq
	(*NamespacesListResp)(nil),    // 7: NamespacesListResp
	(*NamespaceItem)(nil),         // 8: NamespaceItem
	(*ApisResp)(nil),              // 9: ApisResp
	(*ApisItem)(nil),              // 10: ApisItem
	(*ServicesResp)(nil),          // 11: ServicesResp
	(*ServicesItem)(nil),          // 12: ServicesItem
	(*AppsResp)(nil),              // 13: AppsResp
	(*AppsItem)(nil),              // 14: AppsItem
}
var file_infos_proto_depIdxs = []int32{
	8,  // 0: NamespacesListResp.items:type_name -> NamespaceItem
	10, // 1: ApisResp.items:type_name -> ApisItem
	12, // 2: ServicesResp.items:type_name -> ServicesItem
	14, // 3: AppsResp.items:type_name -> AppsItem
	0,  // 4: GetConsoleInfo.GetAllNamespaces:input_type -> EmptyRequest
	1,  // 5: GetConsoleInfo.GetApis:input_type -> GetApisReq
	2,  // 6: GetConsoleInfo.GetApisByUUIDs:input_type -> GetApisByUUIDsReq
	3,  // 7: GetConsoleInfo.GetAllServices:input_type -> GetServicesReq
	4,  // 8: GetConsoleInfo.GetAllServicesByNames:input_type -> GetServicesByNamesReq
	5,  // 9: GetConsoleInfo.GetAllApps:input_type -> GetAppsReq
	6,  // 10: GetConsoleInfo.GetAppsByUuids:input_type -> GetAppsByUuidsReq
	7,  // 11: GetConsoleInfo.GetAllNamespaces:output_type -> NamespacesListResp
	9,  // 12: GetConsoleInfo.GetApis:output_type -> ApisResp
	9,  // 13: GetConsoleInfo.GetApisByUUIDs:output_type -> ApisResp
	11, // 14: GetConsoleInfo.GetAllServices:output_type -> ServicesResp
	11, // 15: GetConsoleInfo.GetAllServicesByNames:output_type -> ServicesResp
	13, // 16: GetConsoleInfo.GetAllApps:output_type -> AppsResp
	13, // 17: GetConsoleInfo.GetAppsByUuids:output_type -> AppsResp
	11, // [11:18] is the sub-list for method output_type
	4,  // [4:11] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_infos_proto_init() }
func file_infos_proto_init() {
	if File_infos_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_infos_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmptyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infos_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApisReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infos_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetApisByUUIDsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infos_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServicesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infos_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetServicesByNamesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infos_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infos_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAppsByUuidsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infos_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamespacesListResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infos_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamespaceItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infos_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApisResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infos_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApisItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infos_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServicesResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infos_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServicesItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infos_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppsResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_infos_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppsItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_infos_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_infos_proto_goTypes,
		DependencyIndexes: file_infos_proto_depIdxs,
		MessageInfos:      file_infos_proto_msgTypes,
	}.Build()
	File_infos_proto = out.File
	file_infos_proto_rawDesc = nil
	file_infos_proto_goTypes = nil
	file_infos_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GetConsoleInfoClient is the client API for GetConsoleInfo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GetConsoleInfoClient interface {
	GetAllNamespaces(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*NamespacesListResp, error)
	GetApis(ctx context.Context, in *GetApisReq, opts ...grpc.CallOption) (*ApisResp, error)
	GetApisByUUIDs(ctx context.Context, in *GetApisByUUIDsReq, opts ...grpc.CallOption) (*ApisResp, error)
	GetAllServices(ctx context.Context, in *GetServicesReq, opts ...grpc.CallOption) (*ServicesResp, error)
	GetAllServicesByNames(ctx context.Context, in *GetServicesByNamesReq, opts ...grpc.CallOption) (*ServicesResp, error)
	GetAllApps(ctx context.Context, in *GetAppsReq, opts ...grpc.CallOption) (*AppsResp, error)
	GetAppsByUuids(ctx context.Context, in *GetAppsByUuidsReq, opts ...grpc.CallOption) (*AppsResp, error)
}

type getConsoleInfoClient struct {
	cc grpc.ClientConnInterface
}

func NewGetConsoleInfoClient(cc grpc.ClientConnInterface) GetConsoleInfoClient {
	return &getConsoleInfoClient{cc}
}

func (c *getConsoleInfoClient) GetAllNamespaces(ctx context.Context, in *EmptyRequest, opts ...grpc.CallOption) (*NamespacesListResp, error) {
	out := new(NamespacesListResp)
	err := c.cc.Invoke(ctx, "/GetConsoleInfo/GetAllNamespaces", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *getConsoleInfoClient) GetApis(ctx context.Context, in *GetApisReq, opts ...grpc.CallOption) (*ApisResp, error) {
	out := new(ApisResp)
	err := c.cc.Invoke(ctx, "/GetConsoleInfo/GetApis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *getConsoleInfoClient) GetApisByUUIDs(ctx context.Context, in *GetApisByUUIDsReq, opts ...grpc.CallOption) (*ApisResp, error) {
	out := new(ApisResp)
	err := c.cc.Invoke(ctx, "/GetConsoleInfo/GetApisByUUIDs", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *getConsoleInfoClient) GetAllServices(ctx context.Context, in *GetServicesReq, opts ...grpc.CallOption) (*ServicesResp, error) {
	out := new(ServicesResp)
	err := c.cc.Invoke(ctx, "/GetConsoleInfo/GetAllServices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *getConsoleInfoClient) GetAllServicesByNames(ctx context.Context, in *GetServicesByNamesReq, opts ...grpc.CallOption) (*ServicesResp, error) {
	out := new(ServicesResp)
	err := c.cc.Invoke(ctx, "/GetConsoleInfo/GetAllServicesByNames", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *getConsoleInfoClient) GetAllApps(ctx context.Context, in *GetAppsReq, opts ...grpc.CallOption) (*AppsResp, error) {
	out := new(AppsResp)
	err := c.cc.Invoke(ctx, "/GetConsoleInfo/GetAllApps", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *getConsoleInfoClient) GetAppsByUuids(ctx context.Context, in *GetAppsByUuidsReq, opts ...grpc.CallOption) (*AppsResp, error) {
	out := new(AppsResp)
	err := c.cc.Invoke(ctx, "/GetConsoleInfo/GetAppsByUuids", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GetConsoleInfoServer is the server API for GetConsoleInfo service.
type GetConsoleInfoServer interface {
	GetAllNamespaces(context.Context, *EmptyRequest) (*NamespacesListResp, error)
	GetApis(context.Context, *GetApisReq) (*ApisResp, error)
	GetApisByUUIDs(context.Context, *GetApisByUUIDsReq) (*ApisResp, error)
	GetAllServices(context.Context, *GetServicesReq) (*ServicesResp, error)
	GetAllServicesByNames(context.Context, *GetServicesByNamesReq) (*ServicesResp, error)
	GetAllApps(context.Context, *GetAppsReq) (*AppsResp, error)
	GetAppsByUuids(context.Context, *GetAppsByUuidsReq) (*AppsResp, error)
}

// UnimplementedGetConsoleInfoServer can be embedded to have forward compatible implementations.
type UnimplementedGetConsoleInfoServer struct {
}

func (*UnimplementedGetConsoleInfoServer) GetAllNamespaces(context.Context, *EmptyRequest) (*NamespacesListResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllNamespaces not implemented")
}
func (*UnimplementedGetConsoleInfoServer) GetApis(context.Context, *GetApisReq) (*ApisResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetApis not implemented")
}
func (*UnimplementedGetConsoleInfoServer) GetApisByUUIDs(context.Context, *GetApisByUUIDsReq) (*ApisResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetApisByUUIDs not implemented")
}
func (*UnimplementedGetConsoleInfoServer) GetAllServices(context.Context, *GetServicesReq) (*ServicesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllServices not implemented")
}
func (*UnimplementedGetConsoleInfoServer) GetAllServicesByNames(context.Context, *GetServicesByNamesReq) (*ServicesResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllServicesByNames not implemented")
}
func (*UnimplementedGetConsoleInfoServer) GetAllApps(context.Context, *GetAppsReq) (*AppsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAllApps not implemented")
}
func (*UnimplementedGetConsoleInfoServer) GetAppsByUuids(context.Context, *GetAppsByUuidsReq) (*AppsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAppsByUuids not implemented")
}

func RegisterGetConsoleInfoServer(s *grpc.Server, srv GetConsoleInfoServer) {
	s.RegisterService(&_GetConsoleInfo_serviceDesc, srv)
}

func _GetConsoleInfo_GetAllNamespaces_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EmptyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetConsoleInfoServer).GetAllNamespaces(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GetConsoleInfo/GetAllNamespaces",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetConsoleInfoServer).GetAllNamespaces(ctx, req.(*EmptyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _GetConsoleInfo_GetApis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetApisReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetConsoleInfoServer).GetApis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GetConsoleInfo/GetApis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetConsoleInfoServer).GetApis(ctx, req.(*GetApisReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GetConsoleInfo_GetApisByUUIDs_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetApisByUUIDsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetConsoleInfoServer).GetApisByUUIDs(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GetConsoleInfo/GetApisByUUIDs",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetConsoleInfoServer).GetApisByUUIDs(ctx, req.(*GetApisByUUIDsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GetConsoleInfo_GetAllServices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServicesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetConsoleInfoServer).GetAllServices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GetConsoleInfo/GetAllServices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetConsoleInfoServer).GetAllServices(ctx, req.(*GetServicesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GetConsoleInfo_GetAllServicesByNames_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServicesByNamesReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetConsoleInfoServer).GetAllServicesByNames(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GetConsoleInfo/GetAllServicesByNames",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetConsoleInfoServer).GetAllServicesByNames(ctx, req.(*GetServicesByNamesReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GetConsoleInfo_GetAllApps_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetConsoleInfoServer).GetAllApps(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GetConsoleInfo/GetAllApps",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetConsoleInfoServer).GetAllApps(ctx, req.(*GetAppsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _GetConsoleInfo_GetAppsByUuids_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAppsByUuidsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GetConsoleInfoServer).GetAppsByUuids(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/GetConsoleInfo/GetAppsByUuids",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GetConsoleInfoServer).GetAppsByUuids(ctx, req.(*GetAppsByUuidsReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _GetConsoleInfo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "GetConsoleInfo",
	HandlerType: (*GetConsoleInfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetAllNamespaces",
			Handler:    _GetConsoleInfo_GetAllNamespaces_Handler,
		},
		{
			MethodName: "GetApis",
			Handler:    _GetConsoleInfo_GetApis_Handler,
		},
		{
			MethodName: "GetApisByUUIDs",
			Handler:    _GetConsoleInfo_GetApisByUUIDs_Handler,
		},
		{
			MethodName: "GetAllServices",
			Handler:    _GetConsoleInfo_GetAllServices_Handler,
		},
		{
			MethodName: "GetAllServicesByNames",
			Handler:    _GetConsoleInfo_GetAllServicesByNames_Handler,
		},
		{
			MethodName: "GetAllApps",
			Handler:    _GetConsoleInfo_GetAllApps_Handler,
		},
		{
			MethodName: "GetAppsByUuids",
			Handler:    _GetConsoleInfo_GetAppsByUuids_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "infos.proto",
}
