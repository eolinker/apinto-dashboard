// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v4.22.3
// source: notice_send.proto

package grpc_service

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NoticeSendResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SendStatus int32  `protobuf:"varint,1,opt,name=send_status,json=sendStatus,proto3" json:"send_status,omitempty"`
	ErrMsg     string `protobuf:"bytes,2,opt,name=err_msg,json=errMsg,proto3" json:"err_msg,omitempty"`
}

func (x *NoticeSendResp) Reset() {
	*x = NoticeSendResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_send_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeSendResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeSendResp) ProtoMessage() {}

func (x *NoticeSendResp) ProtoReflect() protoreflect.Message {
	mi := &file_notice_send_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeSendResp.ProtoReflect.Descriptor instead.
func (*NoticeSendResp) Descriptor() ([]byte, []int) {
	return file_notice_send_proto_rawDescGZIP(), []int{0}
}

func (x *NoticeSendResp) GetSendStatus() int32 {
	if x != nil {
		return x.SendStatus
	}
	return 0
}

func (x *NoticeSendResp) GetErrMsg() string {
	if x != nil {
		return x.ErrMsg
	}
	return ""
}

type NoticeMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Msg   string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *NoticeMsg) Reset() {
	*x = NoticeMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_send_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeMsg) ProtoMessage() {}

func (x *NoticeMsg) ProtoReflect() protoreflect.Message {
	mi := &file_notice_send_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeMsg.ProtoReflect.Descriptor instead.
func (*NoticeMsg) Descriptor() ([]byte, []int) {
	return file_notice_send_proto_rawDescGZIP(), []int{1}
}

func (x *NoticeMsg) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NoticeMsg) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type NoticeSendReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserNames   []string              `protobuf:"bytes,1,rep,name=user_names,json=userNames,proto3" json:"user_names,omitempty"`
	NamespaceId int32                 `protobuf:"varint,2,opt,name=namespace_id,json=namespaceId,proto3" json:"namespace_id,omitempty"`
	Notices     map[string]*NoticeMsg `protobuf:"bytes,3,rep,name=notices,proto3" json:"notices,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *NoticeSendReq) Reset() {
	*x = NoticeSendReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_notice_send_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoticeSendReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoticeSendReq) ProtoMessage() {}

func (x *NoticeSendReq) ProtoReflect() protoreflect.Message {
	mi := &file_notice_send_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoticeSendReq.ProtoReflect.Descriptor instead.
func (*NoticeSendReq) Descriptor() ([]byte, []int) {
	return file_notice_send_proto_rawDescGZIP(), []int{2}
}

func (x *NoticeSendReq) GetUserNames() []string {
	if x != nil {
		return x.UserNames
	}
	return nil
}

func (x *NoticeSendReq) GetNamespaceId() int32 {
	if x != nil {
		return x.NamespaceId
	}
	return 0
}

func (x *NoticeSendReq) GetNotices() map[string]*NoticeMsg {
	if x != nil {
		return x.Notices
	}
	return nil
}

var File_notice_send_proto protoreflect.FileDescriptor

var file_notice_send_proto_rawDesc = []byte{
	0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x4a, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x65, 0x72, 0x72, 0x5f, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x65, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x22,
	0x33, 0x0a, 0x09, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x22, 0xd0, 0x01, 0x0a, 0x0d, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x53,
	0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x07, 0x6e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x73, 0x1a,
	0x46, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x20, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x37, 0x0a, 0x0a, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x29, 0x0a, 0x04, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x0e, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x00,
	0x42, 0x31, 0x5a, 0x2f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x65,
	0x6f, 0x6c, 0x69, 0x6e, 0x6b, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69, 0x6e, 0x74, 0x6f, 0x2d, 0x6d,
	0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2d, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_notice_send_proto_rawDescOnce sync.Once
	file_notice_send_proto_rawDescData = file_notice_send_proto_rawDesc
)

func file_notice_send_proto_rawDescGZIP() []byte {
	file_notice_send_proto_rawDescOnce.Do(func() {
		file_notice_send_proto_rawDescData = protoimpl.X.CompressGZIP(file_notice_send_proto_rawDescData)
	})
	return file_notice_send_proto_rawDescData
}

var file_notice_send_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_notice_send_proto_goTypes = []interface{}{
	(*NoticeSendResp)(nil), // 0: NoticeSendResp
	(*NoticeMsg)(nil),      // 1: NoticeMsg
	(*NoticeSendReq)(nil),  // 2: NoticeSendReq
	nil,                    // 3: NoticeSendReq.NoticesEntry
}
var file_notice_send_proto_depIdxs = []int32{
	3, // 0: NoticeSendReq.notices:type_name -> NoticeSendReq.NoticesEntry
	1, // 1: NoticeSendReq.NoticesEntry.value:type_name -> NoticeMsg
	2, // 2: NoticeSend.Send:input_type -> NoticeSendReq
	0, // 3: NoticeSend.Send:output_type -> NoticeSendResp
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_notice_send_proto_init() }
func file_notice_send_proto_init() {
	if File_notice_send_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_notice_send_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeSendResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_send_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_notice_send_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NoticeSendReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_notice_send_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notice_send_proto_goTypes,
		DependencyIndexes: file_notice_send_proto_depIdxs,
		MessageInfos:      file_notice_send_proto_msgTypes,
	}.Build()
	File_notice_send_proto = out.File
	file_notice_send_proto_rawDesc = nil
	file_notice_send_proto_goTypes = nil
	file_notice_send_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// NoticeSendClient is the client API for NoticeSend service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NoticeSendClient interface {
	Send(ctx context.Context, in *NoticeSendReq, opts ...grpc.CallOption) (*NoticeSendResp, error)
}

type noticeSendClient struct {
	cc grpc.ClientConnInterface
}

func NewNoticeSendClient(cc grpc.ClientConnInterface) NoticeSendClient {
	return &noticeSendClient{cc}
}

func (c *noticeSendClient) Send(ctx context.Context, in *NoticeSendReq, opts ...grpc.CallOption) (*NoticeSendResp, error) {
	out := new(NoticeSendResp)
	err := c.cc.Invoke(ctx, "/NoticeSend/Send", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NoticeSendServer is the server API for NoticeSend service.
type NoticeSendServer interface {
	Send(context.Context, *NoticeSendReq) (*NoticeSendResp, error)
}

// UnimplementedNoticeSendServer can be embedded to have forward compatible implementations.
type UnimplementedNoticeSendServer struct {
}

func (*UnimplementedNoticeSendServer) Send(context.Context, *NoticeSendReq) (*NoticeSendResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Send not implemented")
}

func RegisterNoticeSendServer(s *grpc.Server, srv NoticeSendServer) {
	s.RegisterService(&_NoticeSend_serviceDesc, srv)
}

func _NoticeSend_Send_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NoticeSendReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NoticeSendServer).Send(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/NoticeSend/Send",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NoticeSendServer).Send(ctx, req.(*NoticeSendReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _NoticeSend_serviceDesc = grpc.ServiceDesc{
	ServiceName: "NoticeSend",
	HandlerType: (*NoticeSendServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Send",
			Handler:    _NoticeSend_Send_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "notice_send.proto",
}
