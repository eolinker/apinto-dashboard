syntax = "proto3";
package proto;
option go_package = "github.com/eolink/apinto-dashboard/plugin/go-plugin/internal/proto";
message Header {
  string key = 1;
  repeated string value = 2;
}
message HttpRequest{
  string method = 1;
  string url = 2;
  bytes body = 3;
  repeated Header headers = 4;
  bytes keys = 5;
  string FulPath = 6;
  string id=7;
}
message HttpResponse{
  int32 status = 1;
  bytes body = 2;
  repeated Header headers = 3;
}

message MiddlewareRequest{
  string name = 1;
  HttpRequest request = 2;
}

message MiddlewareResponse{
  bool  abort = 1;
  string  Action = 2;
  repeated Header  headers = 3;
  bytes  Body = 4;
  int32  StatusCode = 5;
  string  ContentType = 6;
  bytes keys = 7;

}
message MiddlewareInfoRequest{
  string name = 1;
  ApiInfo api=3;
}
message MiddlewareInfoResponse{
  bool  result=1;
}

enum Authority{
    UnSet    = 0;
    Internal =1;
    Public   =2;
    Private  =3;
}
message ApiInfo{
  string method=1;
  string path =2;
  string access=3;
  Authority authority=4;
  string id =5;
}
message MiddlewareInfo{
  string name =1;
  bool hasRequestHandler=2;
  bool hasResponseHandler=3;
}
message FrontendInfo {
  string path=1;
  string id =2;
}
message PluginInfos{
  repeated ApiInfo apis=1;
  repeated FrontendInfo frontend=2;
  repeated MiddlewareInfo middlewares=3;
}
message Empty{}


service Service {
  rpc ModuleInfo(Empty)returns(PluginInfos);
  rpc Request(HttpRequest) returns (HttpResponse);
  rpc MiddlewaresRequest(MiddlewareRequest) returns (MiddlewareResponse);
  rpc MiddlewaresResponse(MiddlewareRequest) returns (MiddlewareResponse);
  rpc CheckMiddlewareForApi(MiddlewareInfoRequest) returns (MiddlewareInfoResponse);

}