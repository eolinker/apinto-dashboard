// Code generated by MockGen. DO NOT EDIT.
// Source: service/warn_history.go

// Package mock_service is a generated GoMock package.
package mock_service

import (
	context "context"
	model "github.com/eolinker/apinto-dashboard/model/monitor-model"
	reflect "reflect"
	time "time"

	gomock "github.com/golang/mock/gomock"
)

// MockIWarnHistoryService is a mock of IWarnHistoryService interface.
type MockIWarnHistoryService struct {
	ctrl     *gomock.Controller
	recorder *MockIWarnHistoryServiceMockRecorder
}

// MockIWarnHistoryServiceMockRecorder is the mock recorder for MockIWarnHistoryService.
type MockIWarnHistoryServiceMockRecorder struct {
	mock *MockIWarnHistoryService
}

// NewMockIWarnHistoryService creates a new mock instance.
func NewMockIWarnHistoryService(ctrl *gomock.Controller) *MockIWarnHistoryService {
	mock := &MockIWarnHistoryService{ctrl: ctrl}
	mock.recorder = &MockIWarnHistoryServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIWarnHistoryService) EXPECT() *MockIWarnHistoryServiceMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockIWarnHistoryService) Create(ctx context.Context, namespaceId, partitionId int, infos ...*model.WarnHistoryInfo) error {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, namespaceId, partitionId}
	for _, a := range infos {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "Create", varargs...)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockIWarnHistoryServiceMockRecorder) Create(ctx, namespaceId, partitionId interface{}, infos ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, namespaceId, partitionId}, infos...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockIWarnHistoryService)(nil).Create), varargs...)
}

// QueryList mocks base method.
func (m *MockIWarnHistoryService) QueryList(ctx context.Context, namespaceId, partitionId, pageNum, pageSize int, startTime, endTime time.Time, name string) ([]*model.WarnHistoryInfo, int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "QueryList", ctx, namespaceId, partitionId, pageNum, pageSize, startTime, endTime, name)
	ret0, _ := ret[0].([]*model.WarnHistoryInfo)
	ret1, _ := ret[1].(int64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// QueryList indicates an expected call of QueryList.
func (mr *MockIWarnHistoryServiceMockRecorder) QueryList(ctx, namespaceId, partitionId, pageNum, pageSize, startTime, endTime, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "QueryList", reflect.TypeOf((*MockIWarnHistoryService)(nil).QueryList), ctx, namespaceId, partitionId, pageNum, pageSize, startTime, endTime, name)
}
