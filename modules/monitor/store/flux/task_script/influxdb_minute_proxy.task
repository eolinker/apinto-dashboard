option task = {name: "minute_proxy", cron: "* * * * *", offset: 10s}

proxy_request =  from(bucket: "apinto")
    |> range(start: -1m)
    |> filter(fn: (r) => r._measurement == "proxy")
    |> filter(fn:(r)=>r._field == "request")
    |> group(
        columns: [
            "api",
            "app",
            "upstream",
            "addr",
            "method",
            "node",
            "cluster",
        ],
    )

 proxy_request
    |>sum()
    |> set(key: "_measurement", value: "proxy")
    |> set(key:"_field",value:"p_request")
    |> to(
        bucket: "apinto/minute",
        timeColumn: "_start",
          tagColumns: [
            "api",
            "app",
            "method",
            "upstream",
            "addr",
            "node",
            "cluster",
        ],
    )
 proxy_request
    |>max()
    |> set(key: "_measurement", value: "proxy")
    |> set(key:"_field",value:"p_request_max")
    |> to(
        bucket: "apinto/minute",
          tagColumns: [
            "api",
            "app",
            "method",
            "upstream",
            "addr",
            "node",
            "cluster",
        ],
        timeColumn: "_start",
    )
proxy_request
    |> min()
    |> set(key: "_measurement", value: "proxy")
    |> set(key:"_field",value:"p_request_min")
    |> to(
        bucket: "apinto/minute",
        timeColumn: "_start",
          tagColumns: [
            "api",
            "app",
            "method",
            "upstream",
            "addr",
            "node",
            "cluster",
        ],
    )


proxy_response =  from(bucket: "apinto")
    |> range(start: -1m)
    |> filter(fn: (r) => r._measurement == "proxy")
    |> filter(fn:(r)=>r._field == "response")
    |> group(
        columns: [
            "api",
            "app",
            "upstream",
            "addr",
            "method",
            "node",
            "cluster",
        ],
    )

 proxy_response
    |>sum()
    |> set(key: "_measurement", value: "proxy")
    |> set(key:"_field",value:"p_response")
    |> to(
        bucket: "apinto/minute",
        timeColumn: "_start",
          tagColumns: [
            "api",
            "app",
            "method",
            "upstream",
            "addr",
            "node",
            "cluster",
        ],
    )
 proxy_response
    |>max()
    |> set(key: "_measurement", value: "proxy")
    |> set(key:"_field",value:"p_response_max")
    |> to(
        bucket: "apinto/minute",
          tagColumns: [
            "api",
            "app",
            "method",
            "upstream",
            "addr",
            "node",
            "cluster",
        ],
        timeColumn: "_start",
    )
proxy_response
    |> min()
    |> set(key: "_measurement", value: "proxy")
    |> set(key:"_field",value:"p_response_min")
    |> to(
        bucket: "apinto/minute",
        timeColumn: "_start",
          tagColumns: [
            "api",
            "app",
            "method",
            "upstream",
            "addr",
            "node",
            "cluster",
        ],
    )

proxy_timing =  from(bucket: "apinto")
    |> range(start: -1m)
    |> filter(fn: (r) => r._measurement == "proxy")
    |> filter(fn:(r)=>r._field == "timing")
    |> group(
        columns: [
            "api",
            "app",
            "upstream",
            "addr",
            "method",
            "node",
            "cluster",
        ],
    )

 proxy_timing
    |>sum()
    |> set(key: "_measurement", value: "proxy")
    |> set(key:"_field",value:"p_timing")
    |> to(
        bucket: "apinto/minute",
        timeColumn: "_start",
          tagColumns: [
            "api",
            "app",
            "method",
            "upstream",
            "addr",
            "node",
            "cluster",
        ],
    )
 proxy_timing
    |>max()
    |> set(key: "_measurement", value: "proxy")
    |> set(key:"_field",value:"p_timing_max")
    |> to(
        bucket: "apinto/minute",
          tagColumns: [
            "api",
            "app",
            "method",
            "upstream",
            "addr",
            "node",
            "cluster",
        ],
        timeColumn: "_start",
    )
proxy_timing
    |> min()
    |> set(key: "_measurement", value: "proxy")
    |> set(key:"_field",value:"p_timing_min")
    |> to(
        bucket: "apinto/minute",
        timeColumn: "_start",
          tagColumns: [
            "api",
            "app",
            "method",
            "upstream",
            "addr",
            "node",
            "cluster",
        ],
    )


proxy_status =  from(bucket: "apinto")
    |> range(start: -1m)
    |> filter(fn: (r) => r._measurement == "proxy")
    |> filter(fn:(r)=>r._field == "status")
    |> group(
        columns: [
            "api",
            "app",
            "upstream",
            "addr",
            "method",
            "node",
            "cluster",
        ],
    )

 proxy_status
    |> count()
    |> set(key: "_measurement", value: "proxy")
    |> set(key:"_field",value:"p_total")
    |> to(
        bucket: "apinto/minute",
        timeColumn: "_start",
          tagColumns: [
            "api",
            "app",
            "method",
            "upstream",
            "addr",
            "node",
            "cluster",
        ],
    )
 proxy_status
    |> filter(fn:(r)=> r._value < 400)
    |> count()
    |> set(key: "_measurement", value: "proxy")
    |> set(key:"_field",value:"p_success")
    |> to(
        bucket: "apinto/minute",
          tagColumns: [
            "api",
            "app",
            "method",
            "upstream",
            "addr",
            "node",
            "cluster",
        ],
        timeColumn: "_start",
    )
proxy_status
    |> filter(fn:(r)=>(r._value >= 400 and r._value <500))
    |> count()
    |> set(key: "_measurement", value: "proxy")
    |> set(key:"_field",value:"p_s4xx")
    |> to(
        bucket: "apinto/minute",
        timeColumn: "_start",
          tagColumns: [
            "api",
            "app",
            "method",
            "upstream",
            "addr",
            "node",
            "cluster",
        ],
    )
proxy_status
    |> filter(fn:(r)=>r._value >= 500)
    |> count()
    |> set(key: "_measurement", value: "proxy")
    |> set(key:"_field",value:"p_s5xx")
    |> to(
        bucket: "apinto/minute",
        timeColumn: "_start",
          tagColumns: [
            "api",
            "app",
            "method",
            "upstream",
            "addr",
            "node",
            "cluster",
        ],
    )